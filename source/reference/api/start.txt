.. _c2c-api-start:

=========
``start``
=========


.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Description
-----------

Starts the synchronization between a source and destination cluster.

Requirements
------------

To use the ``start`` endpoint, ``mongosync`` must be in the ``IDLE``
state.

.. include:: /includes/fact-write-blocking-requirement.rst
 
Request
-------

.. code-block:: http
   :copyable: false

   POST /api/v1/start 

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 20 13 13 54

   * - Parameter
     - Type
     - Necessity
     - Description

   * - ``source``
     - string
     - Required
     - Name of the source cluster.
    
   * - ``destination``
     - string
     - Required
     - Name of the destination cluster.

   * - ``reversible``
     - boolean
     - Optional
     - If set to ``true``, enables the synchronization operation to be
       reversed. For more information, see the :ref:`reverse
       <c2c-api-reverse>` endpoint.
       
       Default value is ``false``.

   * - ``enableUserWriteBlocking``
     - boolean
     - Optional
     - If set to ``true``, blocks writes on the destination cluster
       while the synchronization is in progress. After the
       synchronization is committed to the destination cluster, the
       original source cluster blocks writes and the destination cluster
       accepts writes.

       Default value is ``false``.

Response
--------

.. include:: /includes/api/tables/basic-response.rst

Example 1 - Start a Standard Sync Job
-------------------------------------

The following example starts a synchronization job where ``cluster0`` is
the source and ``cluster1`` is the destination.

Request
~~~~~~~

.. literalinclude:: /includes/api/requests/start.sh
   :language: shell

Response
~~~~~~~~

.. literalinclude:: /includes/api/responses/success.json
   :language: json
   :copyable: false

Example 2 - Start a Reversible Sync Job
---------------------------------------

The following example starts a synchronization job where ``cluster0`` is
the source and ``cluster1`` is the destination. The ``reversible`` and
``enableUserWriteBlocking`` fields allow the sync to be reversed.

Request
~~~~~~~

.. literalinclude:: /includes/api/requests/start-reversible.sh
   :language: shell

Response
~~~~~~~~

.. literalinclude:: /includes/api/responses/success.json
   :language: json
   :copyable: false

Behavior
--------

If the ``start`` request is successful, ``mongosync`` enters the
``RUNNING`` state.
