.. _c2c-custom-manual-verification:

==================================
Custom or Manual Verification Page
==================================

.. default-domain:: mongodb

.. facet::
   :name: genre
   :values: tutorial

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. _c2c-document-comparison: 

Document Comparison
-------------------

You can verify sync by comparing documents on the source and destination 
clusters. 

Write a script that queries collections on the source cluster and then checks 
that the correct documents, indexes, collections, metadata, and views exist with
the same values on the destination cluster.

Before you can verify data transfer with this method, ``mongosync`` must be in 
the ``COMMITTED`` state.

.. _c2c-index-comparison: 

Index Comparison
----------------

To verify the transfer of indexes, run the :method:`db.collection.getIndexes` 
method on the source and destination clusters and compare the results. 

.. _c2c-metadata-comparison:

Metadata Comparison
-------------------

To verify the transfer of metadata, run the :method:`db.getCollectionInfos` method
on the source and destination clusters and compare the results.

.. _c2c-shardkey-comparison: 

Shard Key Comparison
--------------------

To verify the transfer of shard keys to a synced collection, run a query on the 
``config.collections`` collection to find a document whose ``_id`` value is the 
namespace of the target collection. Compare the ``key`` value of this document 
in the source and destination clusters.

For example, for a collection named ``pets`` in the ``records`` database, you 
can verify the shard key using the following query in :binary:`mongosh`: 

.. io-code-block:: 
   :copyable: true

   .. input::
      :language: javascript 

      db.getSiblingDB("config").collections.find({ _id : "records.pets" }) 

   .. output:: 
      :language: javascript
      :emphasize-lines: 5-7
      :visible: false

      {
       "_id" : "records.pets",
       "lastmod" : ISODate("2021-07-21T15:48:15.193Z"),
       "timestamp": Timestamp(1626882495, 1),
          "key" : {
          "_id" : 1
          },
       "unique" : false,
       "lastmodEpoch" : ObjectId("5078407bd58b175c5c225fdc"),
       "uuid" :  UUID("f8669e52-5c1b-4ea2-bbdc-a00189b341da")
   }