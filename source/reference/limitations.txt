.. _c2c-limitations:

===========
Limitations
===========


.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

.. warning::

   ``mongosync`` does not check for compliance with the documented
   limitations. Please ensure that your application is not affected by
   the limitations . Running ``mongosync`` in the presence of one of
   these limitations could lead to undefined behavior on the destination
   cluster.

General Limitations
-------------------

- The minimum supported server version is MongoDB 6.0.5.

  .. include:: /includes/fact-minimum-versions.rst

- ``mongosync`` does not support MongoDB rapid releases such as 6.1 or
  6.2. Only major MongoDB releases such as 6.0 or 7.0. are supported.
  For more information on MongoDB versioning, see
  :ref:`release-version-numbers`.
- The source and destination clusters must have the same release
  version.
- The minimum supported :dbcommand:`Feature Compatibility Version
  <setFeatureCompatibilityVersion>` is 6.0.
- The source and destination clusters must have the same Feature
  Compatibility Version.
- The destination cluster must be empty.
- ``mongosync`` does not validate that the clusters or the environment
  are properly configured. 
- Other clients must not write to the destination cluster while
  ``mongosync`` is running.
- If write blocking is disabled, the client must :ref:`prevent writes
  <c2c-api-start>` to the source cluster before starting the commit
  process.
- :dbcommand:`applyOps` operations from the source cluster are not
  supported.
- :ref:`system.* collections <metadata-system-collections>` are not
  replicated.
- Documents that have dollar (``$``) prefixed field names are not
  supported. See :ref:`Field Names with Periods and Dollar Signs
  <crud-concepts-dot-dollar-considerations>`.
- Serverless clusters are not supported.
- The MongoDB Shared Tier is not supported.
- `Queryable Encryption
  <https://www.mongodb.com/docs/v6.0/core/queryable-encryption/>`__ is
  not supported.
- After you replace the ``mongosync`` binary during an upgrade or a
  downgrade, you should drop all non-system databases in the destination
  cluster before starting the new binary. Syncing operations will
  restart from the beginning when you start the new processes.
- You cannot sync a collection that has a unique index and a non-unique
  index defined on the same field(s).

MongoDB Community Edition
-------------------------

{+c2c-product-name+} supports a limited number of operations with
MongoDB Community Edition. Please contact a sales representative to
discuss your requirements.

Unsupported Collection Types
----------------------------

- Time-series collections are not supported.
- Clustered collections with :ref:`expireAfterSeconds
  <db.createCollection.expireAfterSeconds>` set are not supported.

Sharded Clusters
----------------

- ``mongosync`` does not support sync from a sharded cluster
  to a replica set.
- Sync from a replica set to a sharded cluster has the following
  limitations:

  - Collections included in the ``sharding.shardingEntries`` option for
    the :ref:`c2c-api-start` command cannot be renamed to use a
    different database while ``mongosync`` is running.
  - When using the ``sharding.createSupportingIndexes`` option to create
    indexes supporting shard keys on the destination cluster during
    sync, you cannot create these indexes afterwards on the source
    cluster.  
    
    The index must either exist before ``mongosync`` starts or be
    created after the migration is complete and ``mongosync`` has
    stopped.
- Within a collection, the ``_id`` field must be unique across all of
  the shards in the cluster. See :ref:`sharded-clusters-unique-indexes`
  for more details.
- The :dbcommand:`movePrimary` command cannot be used to reassign the
  primary shard while syncing.
- There is no replication for zone configuration. ``mongosync``
  replicates data, it does not inherit zones.
- Shards cannot be added or removed while syncing.
- Only indexes which exist on all shards are synced.
- The shard key cannot be :ref:`refined <shard-key-refine>` while
  syncing.
- The shard key cannot be modified using :dbcommand:`reshardCollection`
  during syncing.
- The maximum number of :ref:`shard key indexes
  <sharding-shard-key-indexes>` is one lower than normal, 63 instead of
  64.

Reversing
---------

- If the old source has :ref:`unique indexes <index-type-unique>` which
  are partially distributed across shards, reversing may cause failures.
  Ensure that unique indexes exist on all shards before reversing.
- .. include:: /includes/fact-reverse-limitation.rst

Multiple Clusters
-----------------

- Syncing multiple source clusters to one destination cluster is not
  supported.
- Syncing one source cluster to many destination clusters is not
  supported.

.. _c2c-filtering-limitations:

Filtered Sync
-------------

.. include:: /includes/limitations-filtering.rst

Capped Collections
------------------

.. include:: /includes/collections/behavior-capped-collections.rst

System Collections
------------------

.. include:: /includes/collections/behavior-system-collections.rst